//
// written with godbolt, C++20 standard
//
// Created by Nakyeong Kim on 2021/01/21
// solved problem posted on https://programmers.co.kr/learn/courses/30/lessons/42626
// priority queue
//

#include <vector>
#include <queue>

using namespace std;

int solution(vector<int> scoville, int K) {
    int answer = 0;
    
    // priority queue in ascending order
    priority_queue<int, vector<int>, greater<int> > pq(scoville.begin(), scoville.end());
    
    // while there is at least one food under K
    // and not all the food is used
    while(pq.size()>1 & pq.top()<K){
        // pq.top() here is the smallest 
        // as it is a priority queue working as min heap
        int a = pq.top();
        pq.pop();
        int b = pq.top();
        pq.pop();
        
        // queue uses push, not push_back
        pq.push(a + b*2);
        answer++;
    }
    
    // after all the iterations, if we cannot make all the food over given K
    if (pq.top() < K) {
        return -1;
    }
        
    return answer;
}
